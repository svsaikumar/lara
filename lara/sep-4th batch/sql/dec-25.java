DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
//READING DATA PAGE BY PAGE
CREATE TABLE EMPLOYEE(ID NUMBER, NAME VARCHAR2(90), SALARY NUMBER);


INSERT INTO EMPLOYEE VALUES(1,'RAMU', 50000);
INSERT INTO EMPLOYEE VALUES(2,'MANU', 40000);
INSERT INTO EMPLOYEE VALUES(3,'KIRAN', 30000);
INSERT INTO EMPLOYEE VALUES(4,'RAJEEV', 450000);
INSERT INTO EMPLOYEE VALUES(5,'MANISH', 60000);
INSERT INTO EMPLOYEE VALUES(6,'SUNITHA', 680000);
INSERT INTO EMPLOYEE VALUES(7,'SURESH', 25000);
INSERT INTO EMPLOYEE VALUES(8,'KUMAR', 70000);
INSERT INTO EMPLOYEE VALUES(9,'SURAKHA', 35000);
INSERT INTO EMPLOYEE VALUES(10,'SREEJA', 58000);

SELECT * FROM EMPLOYEE;
SELECT * FROM EMPLOYEE ORDER BY SALARY;

SELECT * FROM EMPLOYEE ORDER BY SALARY DESC;

SELECT NAME, ROWNUM, SALARY FROM EMPLOYEE ORDER BY SALARY DESC;

SELECT * FROM(SELECT ID, NAME, SALARY, ROWNUM FROM EMPLOYEE ORDER BY SALARY DESC);

//row_num is used for pagination purpose
//ROW_NUM IDENTIFIES READING SINGLE NUM OF ROW

SELECT * FROM(SELECT ID, NAME, SALARY, ROWNUM ROW_NO FROM EMPLOYEE) WHERE ROW_NO < 5;

SELECT * FROM(SELECT ID, NAME, SALARY, ROWNUM ROW_NO FROM EMPLOYEE) WHERE ROW_NO BETWEEN 5 AND 10;

SELECT ID , NAME , SALARY, RANK() OVER(ORDER BY SALARY DESC) SALARY_RANK FROM EMPLOYEE;
//find the rank of the record based on the salary

SELECT * FROM (SELECT ID , NAME, SALARY, RANK() OVER(ORDER BY SALARY DESC) SALARY_RANK FROM EMPLOYEE) WHERE SALARY_RANK = 1;
				//----------------this is temporary table--------------------------------------------

SELECT * FROM (SELECT ID , NAME, SALARY, RANK() OVER(ORDER BY SALARY DESC) SALARY_RANK FROM EMPLOYEE) WHERE SALARY_RANK =4;
				//----------------this is temporary table--------------------------------------------