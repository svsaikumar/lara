

// MANY TO MANY MAPPING
CREATE TABLE STUDENT(ID NUMBER, NAME VARCHAR2(90), AGE NUMBER, CONSTRAINT STUDENT_UK UNIQUE(ID));
//STUDENT CAN BECOME A PARENT TO ANU NUMBER OF CHILD TABLES AS IT IS HAVING A UNIQUE COLUMN

CREATE TABLE SKILL(ID NUMBER, NAME VARCHAR2(90), SKILL_DESC VARCHAR2(90), CONSTRAINT SKILL_UK UNIQUE(ID));
//upto now both tableS are independent


INSERT INTO STUDENT VALUES(1, 'RAMU', 22);
INSERT INTO STUDENT VALUES(2, 'MANU', 25);
INSERT INTO STUDENT VALUES(3, 'RAVI', 24);
INSERT INTO STUDENT VALUES(4, 'KIRAN', 21);



INSERT INTO SKILL VALUES(1, 'C', 'SOME DESC ABOUT C');
INSERT INTO SKILL VALUES(2, 'C++', 'SOME DESC ABOUT C++');
INSERT INTO SKILL VALUES(3, 'JAVA', 'SOME DESC ABOUT JAVA');
INSERT INTO SKILL VALUES(4, 'ORACLE', 'SOME DESC ABOUT ORACLE');


CREATE TABLE STUDENT_SKILL(STUDENT_ID NUMBER, SKILL_ID NUMBER,
        CONSTRAINT STUDENT_SKILL_FK1 FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT(ID),
        CONSTRAINT STUDENT_SKILL_FK2 FOREIGN KEY(SKILL_ID) REFERENCES SKILL(ID));
//CONSIDERS AS INTERMEDIATE TABLE
//USED FOR ONLY MAPPING
//RAMU KNOWS 3 SKILL;NOW WE HAVE TO INSERT 3 RECORDS IN TO INTEREMDEIATE TABLE


INSERT INTO STUDENT_SKILL VALUES(1,1);
INSERT INTO STUDENT_SKILL VALUES(1,2);
INSERT INTO STUDENT_SKILL VALUES(1,3);

INSERT INTO STUDENT_SKILL VALUES(2,3);
INSERT INTO STUDENT_SKILL VALUES(2,4);

INSERT INTO STUDENT_SKILL VALUES(3,1);
INSERT INTO STUDENT_SKILL VALUES(3,3);

INSERT INTO STUDENT_SKILL VALUES(4,1);

SELECT * FROM STUDENT_SKILL;

SELECT SKILL_ID FROM STUDENT_SKILL WHERE STUDENT_ ID = (SELECT ID FROM STUDENT WHERE NAME = 'RAMU');
//FIRST INNER COMMANDS WILL EXECUTE

SELECT NAME FROM SKILL WHERE ID IN(SELECT SKILL_ID FROM STUDENT_SKILL WHERE STUDENT_ID =
(SELECT ID FROM STUDENT WHERE NAME = 'RAMU'));

SELECT ID FROM SKILL WHERE NAME = 'C';

SELECT STUDENT_ID FROM STUDENT_SKILL WHERE SKILL_ID = (SELECT ID FROM SKILL WHERE NAME = 'C');

SELECT NAME FROM STUDENT WHERE ID IN (SELECT STUDENT_ID FROM STUDENT_SKILL WHERE SKILL_ID = 
(SELECT ID FROM SKILL WHERE NAME = 'C'));

//UPDATE BY USING NEW MAPPING
//REMOVE THE CURRENT MAPPINGS AND INSERT NEW MAPPINGS

//HOW TO AVOIDING DUPLICATE MAPPINGS
	//BY COMBINING STUDENT-ID, SKILL_ID (COMPOSITE UNIQUE KEY)

DROP TABLE STUDENT_SKILL;

CREATE TABLE STUDENT_SKILL(STUDENT_ID NUMBER, SKILL_ID NUMBER,
        CONSTRAINT STUDENT_SKILL_FK1 FOREIGN KEY(STUDENT_ID) REFERENCES STUDENT(ID),
        CONSTRAINT STUDENT_SKILL_FK2 FOREIGN KEY(SKILL_ID) REFERENCES SKILL(ID),
        CONSTRAINT STUDENT_SKILL_UK1 UNIQUE (STUDENT_ID, SKILL_ID));

/*MANY TO MANY MAPPINGS CONDITIONS
	-FOREIGN KEY IN INTERMEDIATE TABLE SHOULD NOT BE UNIQUE AND PRIMARY
	-